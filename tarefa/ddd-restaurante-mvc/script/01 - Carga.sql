-- =========================================================
-- FIAP – Restaurante (DDD/MVC)
-- Tabelas: CLIENTES, PRATOS, PEDIDOS, ITENS_PEDIDO, CONTAS
-- =========================================================

-- =====================
-- DROPS SEGUROS (OPC.)
-- =====================
BEGIN EXECUTE IMMEDIATE 'DROP TABLE CONTAS';         EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE ITENS_PEDIDO';   EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE PEDIDOS';        EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE PRATOS';         EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE CLIENTES';       EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/

-- =====================
-- TABELA CLIENTES
-- =====================
CREATE TABLE CLIENTES (
  ID           NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY
               CONSTRAINT PK_CLIENTES PRIMARY KEY,
  NOME         VARCHAR2(120)       NOT NULL,
  EMAIL        VARCHAR2(200)       NOT NULL,
  CPF          VARCHAR2(14)        NOT NULL,
  ATIVO        CHAR(1)             DEFAULT 'S' NOT NULL
               CONSTRAINT CK_CLIENTES_ATIVO CHECK (ATIVO IN ('S','N')),
  CRIADO_EM    TIMESTAMP           DEFAULT SYSTIMESTAMP NOT NULL
);

ALTER TABLE CLIENTES ADD CONSTRAINT UQ_CLIENTES_EMAIL UNIQUE (EMAIL);
ALTER TABLE CLIENTES ADD CONSTRAINT UQ_CLIENTES_CPF   UNIQUE (CPF);

-- =====================
-- TABELA PRATOS
-- =====================
CREATE TABLE PRATOS (
  ID           NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY
               CONSTRAINT PK_PRATOS PRIMARY KEY,
  NOME         VARCHAR2(120)       NOT NULL,
  PRECO        NUMBER(12,2)        NOT NULL
               CONSTRAINT CK_PRATOS_PRECO CHECK (PRECO >= 0),
  ATIVO        CHAR(1)             DEFAULT 'S' NOT NULL
               CONSTRAINT CK_PRATOS_ATIVO CHECK (ATIVO IN ('S','N')),
  CRIADO_EM    TIMESTAMP           DEFAULT SYSTIMESTAMP NOT NULL
);

ALTER TABLE PRATOS ADD CONSTRAINT UQ_PRATOS_NOME UNIQUE (NOME);

-- =====================
-- TABELA PEDIDOS
-- =====================
CREATE TABLE PEDIDOS (
  ID            NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY
                CONSTRAINT PK_PEDIDOS PRIMARY KEY,
  CLIENTE_ID    NUMBER             NOT NULL,
  STATUS        VARCHAR2(20)       DEFAULT 'ABERTO' NOT NULL
                CONSTRAINT CK_PEDIDOS_STATUS CHECK (STATUS IN ('ABERTO','FECHADO','CANCELADO')),
  OBSERVACAO    VARCHAR2(4000),
  CRIADO_EM     TIMESTAMP          DEFAULT SYSTIMESTAMP NOT NULL,
  FECHADO_EM    TIMESTAMP          NULL
);

ALTER TABLE PEDIDOS ADD CONSTRAINT FK_PEDIDOS_CLIENTE
  FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTES(ID);

CREATE INDEX IX_PEDIDOS_CLIENTE ON PEDIDOS (CLIENTE_ID);

-- =====================
-- TABELA ITENS_PEDIDO
-- =====================
CREATE TABLE ITENS_PEDIDO (
  ID              NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY
                  CONSTRAINT PK_ITENS_PEDIDO PRIMARY KEY,
  PEDIDO_ID       NUMBER           NOT NULL,
  PRATO_ID        NUMBER           NOT NULL,
  QUANTIDADE      NUMBER(9)        NOT NULL
                  CONSTRAINT CK_ITENS_QTD CHECK (QUANTIDADE > 0),
  PRECO_UNITARIO  NUMBER(12,2)     NOT NULL
                  CONSTRAINT CK_ITENS_PRECO CHECK (PRECO_UNITARIO >= 0),
  SUBTOTAL        NUMBER(14,2)     GENERATED ALWAYS AS (QUANTIDADE * PRECO_UNITARIO) VIRTUAL
);

ALTER TABLE ITENS_PEDIDO ADD CONSTRAINT FK_ITENS_PEDIDO_PED
  FOREIGN KEY (PEDIDO_ID) REFERENCES PEDIDOS(ID) ON DELETE CASCADE;

ALTER TABLE ITENS_PEDIDO ADD CONSTRAINT FK_ITENS_PEDIDO_PRATO
  FOREIGN KEY (PRATO_ID) REFERENCES PRATOS(ID);

CREATE INDEX IX_ITENS_PEDIDO_PEDIDO ON ITENS_PEDIDO (PEDIDO_ID);
CREATE INDEX IX_ITENS_PEDIDO_PRATO  ON ITENS_PEDIDO (PRATO_ID);

ALTER TABLE ITENS_PEDIDO ADD CONSTRAINT UQ_ITENS_PEDIDO_UNQ UNIQUE (PEDIDO_ID, PRATO_ID);

-- =====================
-- TABELA CONTAS (1–1 com PEDIDOS)
-- =====================
CREATE TABLE CONTAS (
  ID               NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY
                   CONSTRAINT PK_CONTAS PRIMARY KEY,
  PEDIDO_ID        NUMBER           NOT NULL,
  CLIENTE_ID       NUMBER           NOT NULL,
  VALOR_BRUTO      NUMBER(14,2)     NOT NULL
                   CONSTRAINT CK_CONTAS_BRUTO CHECK (VALOR_BRUTO >= 0),
  DESCONTO         NUMBER(14,2)     DEFAULT 0 NOT NULL
                   CONSTRAINT CK_CONTAS_DESC CHECK (DESCONTO >= 0),
  VALOR_FINAL      NUMBER(14,2)     GENERATED ALWAYS AS (VALOR_BRUTO - DESCONTO) VIRTUAL,
  FORMA_PAGAMENTO  VARCHAR2(20)     NULL
                   CONSTRAINT CK_CONTAS_FP CHECK (FORMA_PAGAMENTO IN ('DINHEIRO','CREDITO','DEBITO','PIX')),
  STATUS           VARCHAR2(20)     DEFAULT 'PENDENTE' NOT NULL
                   CONSTRAINT CK_CONTAS_STATUS CHECK (STATUS IN ('PENDENTE','PAGO','ESTORNADO')),
  PAGO_EM          TIMESTAMP        NULL,
  CRIADO_EM        TIMESTAMP        DEFAULT SYSTIMESTAMP NOT NULL
);

ALTER TABLE CONTAS ADD CONSTRAINT UQ_CONTAS_PEDIDO UNIQUE (PEDIDO_ID);
ALTER TABLE CONTAS ADD CONSTRAINT FK_CONTAS_PEDIDO
  FOREIGN KEY (PEDIDO_ID) REFERENCES PEDIDOS(ID) ON DELETE CASCADE;
ALTER TABLE CONTAS ADD CONSTRAINT FK_CONTAS_CLIENTE
  FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTES(ID);

CREATE INDEX IX_CONTAS_CLIENTE ON CONTAS (CLIENTE_ID);

-- CLIENTES
INSERT INTO CLIENTES (NOME, EMAIL, CPF) VALUES ('Ana Souza',  'ana.souza@exemplo.com',  '111.111.111-11');
INSERT INTO CLIENTES (NOME, EMAIL, CPF) VALUES ('Bruno Lima', 'bruno.lima@exemplo.com', '222.222.222-22');

-- PRATOS
INSERT INTO PRATOS (NOME, PRECO) VALUES ('Executivo', 39.90);
INSERT INTO PRATOS (NOME, PRECO) VALUES ('Vegano',    42.00);
INSERT INTO PRATOS (NOME, PRECO) VALUES ('Kids',      29.00);

COMMIT;

-- =================================================
-- EXEMPLO DE CRIAÇÃO DE UM PEDIDO COM ITENS E CONTA
-- =================================================

-- 1) criar um pedido p/ cliente 1
INSERT INTO PEDIDOS (CLIENTE_ID, STATUS, OBSERVACAO) VALUES (1, 'ABERTO', 'Mesa 4');

-- 2) adicionar itens (quantidades e preço do momento)
INSERT INTO ITENS_PEDIDO (PEDIDO_ID, PRATO_ID, QUANTIDADE, PRECO_UNITARIO)
SELECT (SELECT MAX(ID) FROM PEDIDOS), 1, 2, PRECO FROM PRATOS WHERE ID = 1;
INSERT INTO ITENS_PEDIDO (PEDIDO_ID, PRATO_ID, QUANTIDADE, PRECO_UNITARIO)
SELECT (SELECT MAX(ID) FROM PEDIDOS), 2, 1, PRECO FROM PRATOS WHERE ID = 2;

-- 3) gerar conta do pedido (valor bruto calculado por SELECT)
INSERT INTO CONTAS (PEDIDO_ID, CLIENTE_ID, VALOR_BRUTO, DESCONTO, FORMA_PAGAMENTO, STATUS)
SELECT p.ID,
       p.CLIENTE_ID,
       (SELECT NVL(SUM(SUBTOTAL),0) FROM ITENS_PEDIDO WHERE PEDIDO_ID = p.ID) AS VALOR_BRUTO,
       0,
       NULL,
       'PENDENTE'
FROM PEDIDOS p
WHERE p.ID = (SELECT MAX(ID) FROM PEDIDOS);

COMMIT;